package br.com.senaibauru.jonathan.seccao8;

import java.util.Scanner;

public class TabuleiroTeste {

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		Tabuleiro tab = new Tabuleiro("Jonathan", scn);
		Tabuleiro tabC = new Tabuleiro("Computador", scn);
		tab.previewTabuleiro();
		tab.montagemAleatoria();

		tab.previewTabuleiro();
		// Montando o tabuleiro do computador
		System.out.println("Tabuleiro do adversário");
		tabC.montagemAleatoria();
		tabC.mostrarTabuleiro(false);
		//
		do {
			String pos;
			do {
				boolean haErro = false;
				do {
					haErro = false;
					// pedindo a posição ao usuario
					System.out.println("Digite a posição a ser atacada: ");
					pos = scn.nextLine();
					// efetuando o ataque ao adversario
					if (pos.charAt(0) < 'A' || pos.charAt(0) > 'J') {
						System.out.println("Posição invalida!");
						haErro = true;
					}
					try {
						if (Integer.parseInt(pos.substring(1)) < 1 || Integer.parseInt(pos.substring(1)) > 10) {
							System.out.println("Posição invalida");
							haErro = true;
						}
					} catch (Exception e) {
						System.out.println("Posição invalida!");
						haErro = true;
					}
				} while (haErro);
			} while (!tabC.receberAtaque(pos) && !tabC.isTerminado());

			// adversario atacando...
			do {
			pos = tabC.gerarAtaqueAleatorio();
			} while (!tab.receberAtaque(pos) && !tab.isTerminado());

			tab.previewTabuleiro();
			System.out.println("Tabuleiro do adversário");
			tabC.mostrarTabuleiro(false);
			// pedindo a posição

		} while (!tab.isTerminado() && !tabC.isTerminado());
		scn.close();
		// verificando quem ganhou o jogo
		if (tab.isTerminado()) {
			System.out.println(tab.getNomeJogador() + " foi eliminado!");
		} else {
			System.out.println(tabC.getNomeJogador() + " foi eliminado!");
		}
	}

}
